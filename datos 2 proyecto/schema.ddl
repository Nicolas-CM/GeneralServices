-- Creating tables
CREATE TABLE app_user (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    status CHAR(1),
    address VARCHAR2(255),
    city VARCHAR2(255),
    country VARCHAR2(255),
    email VARCHAR2(255),
    last_name VARCHAR2(255),
    name VARCHAR2(255),
    password VARCHAR2(255),
    phone VARCHAR2(255),
    state VARCHAR2(255),
    username VARCHAR2(255),
    zip_code VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABLE billings (
    amount NUMBER(10,2),
    payment_date DATE,
    user_id NUMBER,
    contractor_id NUMBER,
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    request_id NUMBER UNIQUE,
    payment_method VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABLE categories (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    description VARCHAR2(255),
    name VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABLE companies (
    user_id NUMBER UNIQUE,
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    address VARCHAR2(255),
    city VARCHAR2(255),
    country VARCHAR2(255),
    description VARCHAR2(255),
    email VARCHAR2(255),
    name VARCHAR2(255),
    phone VARCHAR2(255),
    state VARCHAR2(255),
    zip_code VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABLE service (
    company_id NUMBER NOT NULL,
    service_id NUMBER NOT NULL,
    PRIMARY KEY (company_id, service_id)
);

CREATE TABLE contractors (
    available CHAR(1),
    status CHAR(1),
    company_id NUMBER,
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABLE permission (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR2(255),
    resource VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABLE requests (
    date DATE,
    user_id NUMBER,
    company_id NUMBER,
    contractor_id NUMBER,
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    service_id NUMBER,
    description VARCHAR2(255),
    status VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABLE role (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    description VARCHAR2(255),
    name VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABLE role_permission (
    permission_id NUMBER NOT NULL,
    role_id NUMBER NOT NULL
);

CREATE TABLE services (
    category_id NUMBER,
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    description VARCHAR2(255),
    name VARCHAR2(255),
    PRIMARY KEY (id)
);

CREATE TABLE user_role (
    role_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    PRIMARY KEY (role_id, user_id)
);

-- Adding foreign key constraints
ALTER TABLE billings ADD CONSTRAINT FK_billings_contractor FOREIGN KEY (contractor_id) REFERENCES contractors;
ALTER TABLE billings ADD CONSTRAINT FK_billings_request FOREIGN KEY (request_id) REFERENCES requests;
ALTER TABLE billings ADD CONSTRAINT FK_billings_user FOREIGN KEY (user_id) REFERENCES app_user;
ALTER TABLE companies ADD CONSTRAINT FK_companies_user FOREIGN KEY (user_id) REFERENCES app_user;
ALTER TABLE company_service ADD CONSTRAINT FK_company_service_company FOREIGN KEY (company_id) REFERENCES companies;
ALTER TABLE company_service ADD CONSTRAINT FK_company_service_service FOREIGN KEY (service_id) REFERENCES services;
ALTER TABLE contractors ADD CONSTRAINT FK_contractors_company FOREIGN KEY (company_id) REFERENCES companies;
ALTER TABLE requests ADD CONSTRAINT FK_requests_company FOREIGN KEY (company_id) REFERENCES companies;
ALTER TABLE requests ADD CONSTRAINT FK_requests_contractor FOREIGN KEY (contractor_id) REFERENCES contractors;
ALTER TABLE requests ADD CONSTRAINT FK_requests_service FOREIGN KEY (service_id) REFERENCES services;
ALTER TABLE requests ADD CONSTRAINT FK_requests_user FOREIGN KEY (user_id) REFERENCES app_user;
ALTER TABLE role_permission ADD CONSTRAINT FK_role_permission_permission FOREIGN KEY (permission_id) REFERENCES permission;
ALTER TABLE role_permission ADD CONSTRAINT FK_role_permission_role FOREIGN KEY (role_id) REFERENCES role;
ALTER TABLE services ADD CONSTRAINT FK_services_category FOREIGN KEY (category_id) REFERENCES categories;
ALTER TABLE user_role ADD CONSTRAINT FK_user_role_role FOREIGN KEY (role_id) REFERENCES role;
ALTER TABLE user_role ADD CONSTRAINT FK_user_role_user FOREIGN KEY (user_id) REFERENCES app_user;